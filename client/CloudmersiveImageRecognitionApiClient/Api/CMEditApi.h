#import <Foundation/Foundation.h>
#import "CMDrawRectangleRequest.h"
#import "CMDrawTextRequest.h"
#import "CMApi.h"

/**
* imageapi
* Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
*
* OpenAPI spec version: v1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface CMEditApi: NSObject <CMApi>

extern NSString* kCMEditApiErrorDomain;
extern NSInteger kCMEditApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(CMApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Composite two images together
/// Composites two input images together; a layered image onto a base image.  The first image you input is the base image.  The second image (the layered image) will be composited on top of this base image.  Supports PNG transparency.  To control padding you can include transparent pixels at the border(s) of your layered images as appropriate.
///
/// @param location Location to composite the layered images; possible values are: \&quot;center\&quot;, \&quot;top-left\&quot;, \&quot;top-center\&quot;, \&quot;top-right\&quot;, \&quot;center-left\&quot;, \&quot;center-right\&quot;, \&quot;bottom-left\&quot;, \&quot;bottom-center\&quot;, \&quot;bottom-right\&quot;
/// @param baseImage Image file to perform the operation on.  Common file formats such as PNG, JPEG are supported.
/// @param layeredImage Image to layer on top of the base image.
/// 
///  code:200 message:"OK"
///
/// @return NSObject*
-(NSURLSessionTask*) editCompositeBasicWithLocation: (NSString*) location
    baseImage: (NSURL*) baseImage
    layeredImage: (NSURL*) layeredImage
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Draw rectangle onto an image
/// Draw one or more rectangles, with customized visuals, onto an image
///
/// @param request 
/// 
///  code:200 message:"OK"
///
/// @return NSObject*
-(NSURLSessionTask*) editDrawRectangleWithRequest: (CMDrawRectangleRequest*) request
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Draw text onto an image
/// Draw one or more pieces of text, with customized visuals, onto an image
///
/// @param request 
/// 
///  code:200 message:"OK"
///
/// @return NSObject*
-(NSURLSessionTask*) editDrawTextWithRequest: (CMDrawTextRequest*) request
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;



@end
